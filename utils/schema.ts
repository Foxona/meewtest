/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/stations": {
    get: operations["list_stations_stations_get"];
    post: operations["create_station_stations_post"];
  };
  "/stations/{id}": {
    get: operations["get_station_by_id_stations__id__get"];
    delete: operations["delete_station_stations__id__delete"];
    patch: operations["update_station_stations__id__patch"];
  };
  "/users": {
    get: operations["list_users_users_get"];
    post: operations["create_user_users_post"];
  };
  "/users/me": {
    get: operations["get_me_users_me_get"];
  };
  "/users/auth": {
    post: operations["auth_user_users_auth_post"];
  };
  "/users/{id}": {
    get: operations["get_user_by_id_users__id__get"];
    delete: operations["delete_user_users__id__delete"];
    patch: operations["update_user_users__id__patch"];
  };
}

export interface components {
  schemas: {
    /** CreateStation */
    CreateStation: {
      /** Name */
      name: string;
      /** Comment */
      comment?: string;
    };
    /** CreateUser */
    CreateUser: {
      /** Name */
      name: string;
      /** Comment */
      comment?: string;
      /** Login */
      login: string;
      /** Password */
      password: string;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** Station */
    Station: {
      /** Id */
      id: number;
      /** Name */
      name?: string;
      /** Comment */
      comment?: string;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /**
       * Updated At
       * Format: date-time
       */
      updated_at?: string;
      /** Api Key */
      api_key: string;
    };
    /** UpdateStation */
    UpdateStation: {
      /** Name */
      name?: string;
      /** Comment */
      comment?: string;
    };
    /** UpdateUser */
    UpdateUser: {
      /** Name */
      name?: string;
      /** Comment */
      comment?: string;
      /** Login */
      login?: string;
      /** Password */
      password?: string;
    };
    /** User */
    User: {
      /** Id */
      id: number;
      /** Name */
      name?: string;
      /** Comment */
      comment?: string;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /**
       * Updated At
       * Format: date-time
       */
      updated_at?: string;
      /** Login */
      login: string;
    };
    /** UserAuth */
    UserAuth: {
      /** Login */
      login: string;
      /** Password */
      password: string;
    };
    /** UserJWT */
    UserJWT: {
      /** User Jwt */
      user_jwt: string;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: string[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
}

export interface operations {
  list_stations_stations_get: {
    parameters: {
      header: {
        "user-jwt"?: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Station"][];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_station_stations_post: {
    parameters: {
      header: {
        "user-jwt"?: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Station"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateStation"];
      };
    };
  };
  get_station_by_id_stations__id__get: {
    parameters: {
      path: {
        id: number;
      };
      header: {
        "user-jwt"?: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Station"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_station_stations__id__delete: {
    parameters: {
      path: {
        id: number;
      };
      header: {
        "user-jwt"?: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Station"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_station_stations__id__patch: {
    parameters: {
      path: {
        id: number;
      };
      header: {
        "user-jwt"?: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Station"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateStation"];
      };
    };
  };
  list_users_users_get: {
    parameters: {
      header: {
        "user-jwt"?: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"][];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_user_users_post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateUser"];
      };
    };
  };
  get_me_users_me_get: {
    parameters: {
      header: {
        "user-jwt"?: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  auth_user_users_auth_post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserJWT"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserAuth"];
      };
    };
  };
  get_user_by_id_users__id__get: {
    parameters: {
      path: {
        id: number;
      };
      header: {
        "user-jwt"?: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_user_users__id__delete: {
    parameters: {
      path: {
        id: number;
      };
      header: {
        "user-jwt"?: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_user_users__id__patch: {
    parameters: {
      path: {
        id: number;
      };
      header: {
        "user-jwt"?: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateUser"];
      };
    };
  };
}

export interface external {}
